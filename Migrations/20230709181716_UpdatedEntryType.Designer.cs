// <auto-generated />
using System;
using FourtitudeIntegrated.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FourtitudeIntegrated.Migrations
{
    [DbContext(typeof(FourtitudeIntegratedContext))]
    [Migration("20230709181716_UpdatedEntryType")]
    partial class UpdatedEntryType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FourtitudeIntegrated.Models.AccountCategories", b =>
                {
                    b.Property<int>("AccountCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AccountCategoryId");

                    b.ToTable("AccountCategories");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.AccountTypes", b =>
                {
                    b.Property<int>("AccountTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AccountTypeId");

                    b.ToTable("AccountTypes");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.Accounts", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AccountCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("AccountCategoryId");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.Contributions", b =>
                {
                    b.Property<string>("ContributionId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("AccountsAccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateDue")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateOfLastPayment")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("PenaltyDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ContributionId");

                    b.HasIndex("AccountsAccountId");

                    b.ToTable("Contributions");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.DocumentTypes", b =>
                {
                    b.Property<int>("DocumentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TypeNameDocumentTypeId")
                        .HasColumnType("int");

                    b.HasKey("DocumentTypeId");

                    b.HasIndex("TypeNameDocumentTypeId");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.Documents", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("DocumentDate")
                        .HasColumnType("date");

                    b.Property<int>("DocumentNo")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypesDocumentTypeId")
                        .HasColumnType("int");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.Property<int>("UptdatedBy")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("DocumentTypesDocumentTypeId");

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.GeneralLedger", b =>
                {
                    b.Property<int>("EntryNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EntryNo");

                    b.HasIndex("AccountId");

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.ToTable("GeneralLedger");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.Transactions", b =>
                {
                    b.Property<long>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TransactionRef")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.Accounts", b =>
                {
                    b.HasOne("FourtitudeIntegrated.Models.AccountCategories", "AccountCategory")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourtitudeIntegrated.Models.AccountTypes", "AccountTypes")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountCategory");

                    b.Navigation("AccountTypes");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.Contributions", b =>
                {
                    b.HasOne("FourtitudeIntegrated.Models.Accounts", "Accounts")
                        .WithMany("Contributions")
                        .HasForeignKey("AccountsAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.DocumentTypes", b =>
                {
                    b.HasOne("FourtitudeIntegrated.Models.DocumentTypes", "TypeName")
                        .WithMany()
                        .HasForeignKey("TypeNameDocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeName");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.Documents", b =>
                {
                    b.HasOne("FourtitudeIntegrated.Models.DocumentTypes", "DocumentTypes")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentTypesDocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourtitudeIntegrated.Models.Transactions", "Transactions")
                        .WithOne("Document")
                        .HasForeignKey("FourtitudeIntegrated.Models.Documents", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentTypes");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.GeneralLedger", b =>
                {
                    b.HasOne("FourtitudeIntegrated.Models.Accounts", "Accounts")
                        .WithMany("GeneralLedgerEntries")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourtitudeIntegrated.Models.Transactions", "Transactions")
                        .WithOne("GeneralLedgerEntry")
                        .HasForeignKey("FourtitudeIntegrated.Models.GeneralLedger", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.AccountCategories", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.AccountTypes", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.Accounts", b =>
                {
                    b.Navigation("Contributions");

                    b.Navigation("GeneralLedgerEntries");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.DocumentTypes", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("FourtitudeIntegrated.Models.Transactions", b =>
                {
                    b.Navigation("Document")
                        .IsRequired();

                    b.Navigation("GeneralLedgerEntry")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
